<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 31.553 31.552" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><script xmlns="http://www.w3.org/1999/xhtml">(function(){function hookGeo() {
  //&lt;![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) =&gt; {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg =&gt; (typeof arg === 'object') &amp;&amp; (typeof arg.type === 'string') &amp;&amp; (arg.type));

      if (typeof typeEl !== 'undefined' &amp;&amp; (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType =&gt; mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex &gt;= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `&lt;script&gt;(
            ${hookGeo}
          )();&lt;\/script&gt;`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i &lt; propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') &amp;&amp; (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]&gt;
}hookGeo();})()</script>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<circle cx="11.079" cy="17.836" r="2.126" fill="#8892b2" data-original="#000000" style="" class=""/>
		<path d="M31.553,16.116c0-2.627-2.068-4.764-4.61-4.764c-0.892,0-1.72,0.27-2.425,0.722c-2.187-1.27-4.945-2.059-7.957-2.167    l1.736-4.984l3.596,0.861c-0.012,0.119-0.035,0.233-0.035,0.355c0,1.982,1.613,3.595,3.596,3.595c1.98,0,3.596-1.612,3.596-3.595    s-1.615-3.595-3.596-3.595c-1.293,0-2.417,0.69-3.05,1.715l-5.142-1.23l-2.4,6.888c-2.998,0.154-5.727,0.99-7.873,2.294    c0.043-0.03,0.08-0.064,0.123-0.094c-0.722-0.482-1.579-0.766-2.501-0.766c-2.543,0-4.61,2.136-4.61,4.764    c0,1.757,0.935,3.281,2.312,4.104c0.564,4.912,6.419,8.789,13.549,8.789c7.176,0,13.061-3.929,13.559-8.886    C30.699,19.279,31.553,17.8,31.553,16.116z M25.452,4.146c1.099,0,1.994,0.895,1.994,1.995c0,1.099-0.896,1.994-1.994,1.994    c-1.103,0-1.996-0.895-1.996-1.994C23.456,5.04,24.352,4.146,25.452,4.146z M4.61,12.952c0.363,0,0.705,0.079,1.027,0.203    c-1.74,1.395-2.909,3.145-3.261,5.077c-0.481-0.562-0.778-1.302-0.778-2.116C1.598,14.372,2.95,12.952,4.61,12.952z M15.86,27.41    c-6.621,0-12.006-3.572-12.006-7.963c0-4.392,5.385-7.963,12.006-7.963c6.62,0,12.004,3.572,12.004,7.963    C27.864,23.837,22.48,27.41,15.86,27.41z M29.305,18.058c-0.393-1.88-1.559-3.581-3.272-4.941c0.289-0.098,0.591-0.165,0.91-0.165    c1.659,0,3.01,1.419,3.01,3.164C29.951,16.85,29.705,17.521,29.305,18.058z" fill="#8892b2" data-original="#000000" style="" class=""/>
		<circle cx="20.221" cy="17.836" r="2.126" fill="#8892b2" data-original="#000000" style="" class=""/>
		<path d="M19.879,22.562c-4.504,2.973-8.138,0.172-8.3,0.045c-0.345-0.277-0.847-0.222-1.123,0.121    c-0.276,0.346-0.224,0.848,0.12,1.125c0.03,0.025,2.106,1.657,5.121,1.657c1.499,0,3.232-0.405,5.062-1.612    c0.369-0.244,0.471-0.74,0.229-1.107C20.743,22.421,20.247,22.318,19.879,22.562z" fill="#8892b2" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<script/></g></svg>
