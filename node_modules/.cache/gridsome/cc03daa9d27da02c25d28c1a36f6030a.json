{"remainingRequest":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/AboutContract.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/AboutContract.vue","mtime":1635266967000},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js","mtime":1635342689283},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/babel-loader/lib/index.js","mtime":1635342689279},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js","mtime":1635342689283},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/vue-loader/lib/index.js","mtime":1635342690227}],"contextDependencies":[],"result":["import _asyncToGenerator from \"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar tokenAddress = \"0xd00981105e61274c8a5cd5a88fe7e037d935b513\";\nvar tokenSymbol = \"RIFLE\";\nvar tokenDecimals = 18;\nvar tokenImage = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Solid_blue.svg/2048px-Solid_blue.svg.png\";\nconsole.log(\"Riflebird Network: constant declared\");\nexport default {\n  mounted: function mounted() {\n    if (typeof window.ethereum !== \"undefined\") {\n      console.log(\"Riflebird Network: MetaMask is installed\");\n    }\n  },\n  methods: {\n    addTokenFunction: function () {\n      var _addTokenFunction = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var wasAdded;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"test successful - 1\");\n                _context.prev = 1;\n                _context.next = 4;\n                return ethereum.request({\n                  method: \"wallet_watchAsset\",\n                  params: {\n                    type: \"ERC20\",\n                    // Initially only supports ERC20, but eventually more!\n                    options: {\n                      address: tokenAddress,\n                      // The address that the token is at.\n                      symbol: tokenSymbol,\n                      // A ticker symbol or shorthand, up to 5 chars.\n                      decimals: tokenDecimals,\n                      // The number of decimals in the token\n                      image: tokenImage // A string url of the token logo\n\n                    }\n                  }\n                });\n\n              case 4:\n                wasAdded = _context.sent;\n\n                if (wasAdded) {\n                  console.log(\"Riflebird Network: RIFLE token has been added successfully\");\n                } else {\n                  console.log(\"Riflebird Network: RIFLE token has not been added\");\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      function addTokenFunction() {\n        return _addTokenFunction.apply(this, arguments);\n      }\n\n      return addTokenFunction;\n    }()\n  }\n};\nconsole.log(\"Riflebird Network: Success\");",{"version":3,"sources":["/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/AboutContract.vue"],"names":["tokenAddress","tokenSymbol","tokenDecimals","tokenImage","console","log","mounted","window","ethereum","methods","addTokenFunction","request","method","params","type","options","address","symbol","decimals","image","wasAdded"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,YAAY,GAAG,4CAArB;AACA,IAAMC,WAAW,GAAG,OAApB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,UAAU,GACd,oGADF;AAGAC,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAEA,eAAe;AACbC,EAAAA,OADa,qBACH;AACR,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1CJ,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD;AACF,GALY;AAMbI,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB;AAAA,sFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBN,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADgB;AAAA;AAAA,uBAISG,QAAQ,CAACG,OAAT,CAAiB;AACtCC,kBAAAA,MAAM,EAAE,mBAD8B;AAEtCC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,IAAI,EAAE,OADA;AACS;AACfC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,OAAO,EAAEhB,YADF;AACgB;AACvBiB,sBAAAA,MAAM,EAAEhB,WAFD;AAEc;AACrBiB,sBAAAA,QAAQ,EAAEhB,aAHH;AAGkB;AACzBiB,sBAAAA,KAAK,EAAEhB,UAJA,CAIY;;AAJZ;AAFH;AAF8B,iBAAjB,CAJT;;AAAA;AAIRiB,gBAAAA,QAJQ;;AAiBd,oBAAIA,QAAJ,EAAc;AACZhB,kBAAAA,OAAO,CAACC,GAAR,CACE,4DADF;AAGD,iBAJD,MAIO;AACLD,kBAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACD;;AAvBa;AAAA;;AAAA;AAAA;AAAA;AAyBdD,gBAAAA,OAAO,CAACC,GAAR;;AAzBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADT;AANI,CAAf;AAsCAD,OAAO,CAACC,GAAR,CAAY,4BAAZ","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst tokenAddress = \"0xd00981105e61274c8a5cd5a88fe7e037d935b513\";\nconst tokenSymbol = \"RIFLE\";\nconst tokenDecimals = 18;\nconst tokenImage =\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Solid_blue.svg/2048px-Solid_blue.svg.png\";\n\nconsole.log(\"Riflebird Network: constant declared\");\n\nexport default {\n  mounted() {\n    if (typeof window.ethereum !== \"undefined\") {\n      console.log(\"Riflebird Network: MetaMask is installed\");\n    }\n  },\n  methods: {\n    addTokenFunction: async function () {\n      console.log(\"test successful - 1\");\n\n      try {\n        const wasAdded = await ethereum.request({\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n            options: {\n              address: tokenAddress, // The address that the token is at.\n              symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n              decimals: tokenDecimals, // The number of decimals in the token\n              image: tokenImage, // A string url of the token logo\n            },\n          },\n        });\n\n        if (wasAdded) {\n          console.log(\n            \"Riflebird Network: RIFLE token has been added successfully\"\n          );\n        } else {\n          console.log(\"Riflebird Network: RIFLE token has not been added\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n\nconsole.log(\"Riflebird Network: Success\");\n"]}]}