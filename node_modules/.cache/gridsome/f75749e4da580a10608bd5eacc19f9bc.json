{"remainingRequest":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/ipFooter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/ipFooter.vue","mtime":1627819575000},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js","mtime":1635342689283},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/babel-loader/lib/index.js","mtime":1635342689279},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/cache-loader/dist/cjs.js","mtime":1635342689283},{"path":"/Users/gregoryjose/Downloads/Rainbow (fixed build)/node_modules/vue-loader/lib/index.js","mtime":1635342690227}],"contextDependencies":[],"result":["import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.date.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      response: null,\n      ip: null,\n      ts: null\n    };\n  },\n  watch: {\n    // This should do a substring of the result returned by CloudFlare\n    response: function response() {\n      this.ip = this.response.substring(this.response.search('ip=') + 3, this.response.search('ts='));\n      this.ts = this.response.substring(this.response.search('ts=') + 3, this.response.search('visit_scheme='));\n    }\n  },\n  computed: {\n    tsFormatted: function tsFormatted() {\n      return new Date(this.ts * 1000);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // Get the user's states from the cloudflare service\n    axios.get(\"https://www.cloudflare.com/cdn-cgi/trace\").then(function (response) {\n      return _this.response = response.data;\n    });\n  }\n};\nconsole.log(\"test - 2;\");",{"version":3,"sources":["/Users/gregoryjose/Downloads/Rainbow (fixed build)/src/components/ipFooter.vue"],"names":["axios","data","response","ip","ts","watch","substring","search","computed","tsFormatted","Date","mounted","get","then","console","log"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,QAAQ,EAAE,IADL;AAERC,MAAAA,EAAE,EAAE,IAFI;AAGRC,MAAAA,EAAE,EAAE;AAHI,KAAP;AAKD,GAPY;AAQdC,EAAAA,KAAK,EAAE;AACJ;AACAH,IAAAA,QAAQ,EAAE,oBAAW;AACnB,WAAKC,EAAL,GAAU,KAAKD,QAAL,CAAcI,SAAd,CAAwB,KAAKJ,QAAL,CAAcK,MAAd,CAAqB,KAArB,IAA4B,CAApD,EAAuD,KAAKL,QAAL,CAAcK,MAAd,CAAqB,KAArB,CAAvD,CAAV;AACA,WAAKH,EAAL,GAAU,KAAKF,QAAL,CAAcI,SAAd,CAAwB,KAAKJ,QAAL,CAAcK,MAAd,CAAqB,KAArB,IAA4B,CAApD,EAAuD,KAAKL,QAAL,CAAcK,MAAd,CAAqB,eAArB,CAAvD,CAAV;AACD;AALG,GARO;AAedC,EAAAA,QAAQ,EAAE;AACPC,IAAAA,WADO,yBACQ;AAChB,aAAO,IAAIC,IAAJ,CAAS,KAAKN,EAAL,GAAU,IAAnB,CAAP;AACA;AAHQ,GAfI;AAoBbO,EAAAA,OApBa,qBAoBH;AAAA;;AACR;AACAX,IAAAA,KAAK,CACJY,GADD,CACK,0CADL,EAEGC,IAFH,CAEQ,UAAAX,QAAQ;AAAA,aAAI,KAAI,CAACA,QAAL,GAAgBA,QAAQ,CAACD,IAA7B;AAAA,KAFhB;AAGD;AAzBY,CAAf;AA4BAa,OAAO,CAACC,GAAR,CAAY,WAAZ","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      response: null,\n\t\t\tip: null,\n\t\t\tts: null\n    };\n  },\n\twatch: {\n    // This should do a substring of the result returned by CloudFlare\n    response: function (){\n      this.ip = this.response.substring(this.response.search('ip=')+3, this.response.search('ts='));\n      this.ts = this.response.substring(this.response.search('ts=')+3, this.response.search('visit_scheme='));\n    }\n  },\n\tcomputed: {\n    tsFormatted () {\n\t\t\treturn new Date(this.ts * 1000)\n\t\t}\n  },\n  mounted() {\n    // Get the user's states from the cloudflare service\n    axios\n    .get(\"https://www.cloudflare.com/cdn-cgi/trace\")\n      .then(response=> (this.response = response.data))\n  }\n}\n\nconsole.log(\"test - 2;\")\n\n\n"]}]}